<?xml version="1.0" encoding="UTF-8"?>
<!--
  * Copyright 2020 The Java EE Tracking System
  * Copyright 2020 Kristof BeiglbÃ¶ck kbeigl@jeets.org
  *
  * The JeeTS Project licenses this file to you under the Apache License,
  * version 2.0 (the "License"); you may not use this file except in compliance
  * with the License. You may obtain a copy of the License at:
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  * License for the specific language governing permissions and limitations
  * under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.jeets</groupId>
		<artifactId>jeets-server-etl</artifactId>
		<version>1.3-SNAPSHOT</version>
	</parent>

	<artifactId>jeets-dcs-amq</artifactId>
    <!-- <version>1.2.0</version> -->
	<packaging>jar</packaging>

	<url>http://jeets.org</url>
	<description>JeeTS Device Communication Server to ActiveMQ</description>

	<dependencies>
		<dependency>
			<groupId>org.jeets</groupId>
			<artifactId>jeets-protocols</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-netty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-activemq</artifactId>
		</dependency>

		<!-- for testing -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
    <defaultGoal>install</defaultGoal>

    <plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<configuration>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		<!-- this is important to terminate target\surefire\surefirebooterXXX.jar  
      	if test is cancelled with <CTRL> + <C>. Otherwise port remains blocked!! -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<configuration>
				<shutdown>kill</shutdown>
			</configuration>
		</plugin>  
		<plugin>
        <!-- STATUS APRIL 2018: 
        	The jeets-dcs-amq.jar file has the correct jeets TypeConverter.
        	Then the assembly copies the TypeConverter from camel-netty4 (override).
        	Therefore the project file can be used, but the command line file
        	produces an error due to missing jeets TypeConverter 
        	The solution should be found here (includes/excludes):
        	maven.apache.org/plugins/maven-assembly-plugin/assembly.html
        	HACK SOLUTION (model with Maven/Ant!?):
        	edit TypeConverter inside jar-with-dependencies and
        	REPLACE org.apache.camel.component.netty4.NettyConverter
        	with org.jeets.dcsToAmq.steps.DeviceProtoToEntityTransformer (works!) 
       	-->
			<artifactId>maven-assembly-plugin</artifactId>
			<configuration>
				<archive>
					<manifest>
						<mainClass>org.jeets.dcsToAmq.Main</mainClass>
					</manifest>
				</archive>
			</configuration>
		</plugin>
		<!-- generate components meta-data and validate component includes documentation etc
		<plugin>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-package-maven-plugin</artifactId>
			<version>${camel.version}</version>
			<executions>
				<execution>
					<id>prepare</id>
					<goals>
						<goal>prepare-components</goal>
					</goals>
					<phase>generate-resources</phase>
				</execution>
				<execution>
					<id>validate</id>
					<goals>
						<goal>validate-components</goal>
					</goals>
					<phase>prepare-package</phase>
				</execution>
			</executions>
		</plugin> -->
    </plugins>
	</build>
</project>
