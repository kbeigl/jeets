# This file holds all configurable jeets properties and 
# is aligned with individual projects for each release.
# The file should only be modified manually and can then
# be propagated to the projects with: <cmdline>
# In order to customize the jeets to other environments,
# i.e. customer production, the file can also be copied,
# renamed and replace the default file via <cmdline>
# The main jeets properties are also used to synchronize
# integration tests, like tracker2dcs using the same port
# and host to send and receive messages.

# you can also use - but should not override - maven properties 
# this file should only configure jeets tests and releases

############## jeets-models ##############

##### jeets-pu-traccar ##### 
############################
# find persistence-unit names in the code
jeets.host=localhost
# TODO: rename
# jeets.pg.port=5432
jeets.port=5432
# jeets.db.host=localhost
# jeets.db.port=5432
jeets.dbname=traccar4.1
# jeets.traccar.version=4.2 (no ERM changes!)
jeets.jdbc.driver=org.postgresql.Driver
jeets.jdbc.url=jdbc:postgresql://localhost:5432/traccar4.1
#jeets.jdbc.url=jdbc:postgresql://${jeets.host}:${jeets.port}/${jeets.dbname}
jeets.jdbc.user=postgres
jeets.jdbc.password=postgres
jeets.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

##### test ##### 
# a. h2 embedded in memory
#jeets.test.jdbc.url=jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
# b. h2 server based DB (for itests)
# jeets.test.jdbc.url=jdbc:h2:tcp://${db.host}:9092/./target/testsrvdb
# hibernate.dialect=org.hibernate.dialect.H2Dialect
# c. h2 file based DB
jeets.test.jdbc.url=jdbc:h2:${project.build.directory}/${jeets.dbname}
jeets.test.jdbc.user=sa
jeets.test.jdbc.password=
jeets.test.jdbc.driver=org.h2.Driver
jeets.test.hibernate.show_sql=false
jeets.test.hibernate.dialect=${jeets.hibernate.dialect}

# postgres tests drop and create tables, but ..
# TODO: truncation syntax in truncateTables() must distinguish h2 <> pg
#	jeets.test.host=${jeets.host}
#	jeets.test.port=${jeets.port}
# MAKE SURE TO USE 'test' PREFIX, DON'T ACCESS PRODUCTION DB !!
#	jeets.test.dbname=test${jeets.dbname}
#	jeets.test.jdbc.url=jdbc:postgresql://${jeets.host}:${jeets.port}/${jeets.test.dbname}
#	jeets.test.jdbc.driver=org.postgresql.Driver
#	jeets.test.jdbc.user=postgres
#	jeets.test.jdbc.password=postgres

jeets.test.hibernate.dialect=${jeets.hibernate.dialect}


###### jeets-protocols ######
#############################
# applied in modules below (add port here?)
jeets.protocol.traccar.protobuffer=protobuffer
# traccar naming
# <entry key='protobuffer.port'>5200</entry>
# gps103.port=5001
#  tk103.port=5002
#  gl100.port=5003 etc.

############## jeets-clients ##############

####### jeets-tracker #######
#############################
# tracker only for protobuffers
# jeets.tracker.uniqueId=pb.device
jeets.tracker.uniqueId=${jeets.protocol.traccar.protobuffer}
jeets.tracker.host=${jeets.host}
jeets.tracker.port=5200
jeets.tracker.maxPosPerMsg=2
jeets.tracker.retryInMillis=10000
# jeets-tracker Main
jeets.tracker.sendInMillis=10000


############## jeets-server-JSE ##############
# TODO: wire ALL Camel Endpoints will be via properties

####### jeets-dcs ###### (adjust with clients)
########################
# align client and server
jeets.dcs.host=${jeets.host}
jeets.dcs.protobuffer.port=${jeets.tracker.port}
jeets.dcs.protobuffer.protocol=${jeets.protocol.traccar.protobuffer}
# in/output definitions, start/endpoints
# jeets.dcs.protobuffer.endpoint=//{{dcs.host}}:{{dcs.protobuffer.protocol}}?serverInitializerFactory=#device


####### jeets-etl ######
########################
# configure DCS inside ETL ??
# jeets.etl.dcs.host=${jeets.host}
# jeets.etl.dcs.protobuffer.port=${jeets.tracker.port}
# jeets.etl.dcs.protobuffer.protocol=${jeets.protocol.traccar.protobuffer}
# in/output definitions, start/endpoints
# jeets.etl.protobuffer.endpoint=//{{dcs.host}}:{{dcs.protobuffer.protocol}}?serverInitializerFactory=#device



