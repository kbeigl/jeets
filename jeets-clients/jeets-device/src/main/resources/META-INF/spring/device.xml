<?xml version="1.0" encoding="UTF-8"?>
<!--
  * Copyright 2020 The JEE Tracking System - JeeTS
  * Copyright 2020 Kristof BeiglbÃ¶ck kbeigl@roaf.de
  *
  * The JeeTS Project licenses this file to you under the Apache License,
  * version 2.0 (the "License"); you may not use this file except in compliance
  * with the License. You may obtain a copy of the License at:
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  * License for the specific language governing permissions and limitations
  * under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd                         http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.jeets.device.Device" id="Device"/>
    <camelContext id="camelContext-device" xmlns="http://camel.apache.org/schema/spring">
        <errorHandler deadLetterUri="log:dead?level=ERROR"
            id="redeliverEH" type="DeadLetterChannel">
            <redeliveryPolicy backOffMultiplier="2"
                maximumRedeliveries="3" retryAttemptedLogLevel="WARN" useExponentialBackOff="true"/>
        </errorHandler>
        <!-- <routeBuilder ref="aa"/> must be placed before <route>s -->
        <route id="route-file-in">
            <!-- TODO: remove (implicitly created) send folder with mvn clean -->
            <from id="fromFile" uri="file://send?charset=UTF-8&amp;preMove=.sending&amp;move=.sent&amp;moveFailed=.error"/>
            <to id="toParseFile" uri="direct:parse.file"/>
        </route>
        <route errorHandlerRef="redeliverEH" id="route-parse-file">
            <from id="fromParseFile" uri="direct:parse.file"/>
            <split id="splitLine" streaming="true">
                <!-- apply simple bodyOneLine -->
                <tokenize token="\n"/>
                <to id="toLineParser" uri="direct:setconf.fileone"/>
                <when id="whenConfigExists">
                    <simple>${header.deviceconfig} != null</simple>
                    <to id="toDevice" uri="direct:device.send.hex"/>
                    <log id="_log1" message="response: ${body}"/>
                </when>
                <!-- else -->
            </split>
        </route>
    </camelContext>
</beans>
